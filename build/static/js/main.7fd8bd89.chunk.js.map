{"version":3,"sources":["components/ws.js","components/signalr.js","components/socketio.js","App.js","serviceWorker.js","index.js"],"names":["valid_websocket","_ws","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","render_websocket","websocket_validation","web_socket_url","response_area","test","setState","toastMessage","data","set_response_area","message","refWebSocket","sendMessage","value","event","target","type","toast","success","warning","error","_this2","react_default","a","createElement","build_default","url","onOpen","bind","onMessage","onClose","ref","Websocket","className","htmlFor","onChange","web_socket_url_change","placeholder","disabled","onClick","connect","style","padding","aria-label","rows","marginTop","width","React","Component","require","_signalr","uri","hub_name","events","invoke","incoming_event","connected","set_connectin_state","assertThisInitialized","includes","_window$$$connection$","splitted","split","event_name","shift","console","log","window","$","connection","apply","concat","toConsumableArray","script","document","src","async","body","appendChild","onload","hub","client","_loop","incoming_event_name","i","set_incoming_event","_len","arguments","length","args","Array","_key","reconnecting","reconnected","disconnected","start","done","id","fail","uri_change","hub_name_change","react_tagsinput_default","add_event","inputProps","invoke_change","invoke_event","_socketio","script2","innerHTML","socket","on","map","item","JSON","stringify","App","_useState","useState","_useState2","slicedToArray","socketType","setSocketType","href","label","data-max-options","ws","signalr","socketio","react_toastify","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fd8bd89.chunk.js","sourcesContent":["import React from 'react';\r\nimport Websocket from 'react-websocket';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst valid_websocket = /^wss?:\\/\\/([0-9]{1,3}(?:\\.[0-9]{1,3}){3}|[a-zA-Z]+)(:[0-9]{1,5})$/i;\r\n\r\n\r\nclass _ws extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      render_websocket: false,\r\n      websocket_validation: false,\r\n      web_socket_url: '',\r\n      response_area: ''\r\n    }\r\n  }\r\n  connect(){\r\n    if(valid_websocket.test(this.state.web_socket_url)){\r\n      this.setState({render_websocket: true});\r\n    }else{\r\n      this.setState({websocket_validation: false});\r\n      this.toastMessage(3,\"Address is not valid!\");\r\n    }\r\n  }\r\n  onMessage(data) {\r\n    this.set_response_area(data);\r\n  };\r\n  onOpen(){\r\n    this.setState({websocket_validation: true})\r\n    this.toastMessage(1,\"Connected successfully\");\r\n  };\r\n  onClose(){\r\n    this.toastMessage(2,\"Server not available!\");\r\n    this.setState({websocket_validation: false})\r\n    this.setState({render_websocket: false})\r\n  };\r\n\r\n  sendMessage(message){\r\n    if(this.state.render_websocket){\r\n      this.refWebSocket.sendMessage(message);\r\n    }\r\n  }\r\n  set_response_area(value){\r\n    this.setState({response_area: value})\r\n  }\r\n  web_socket_url_change(event){\r\n    this.setState({web_socket_url: event.target.value});\r\n  }\r\n\r\n  toastMessage(type,message){\r\n    if(type === 1){\r\n      toast.success(message);\r\n    }else if(type === 2){\r\n      toast.warning(message);\r\n    }else{\r\n      toast.error(message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {\r\n          this.state.render_websocket ?\r\n          <Websocket url={this.state.web_socket_url}\r\n            onOpen={this.onOpen.bind(this)}\r\n            onMessage={this.onMessage.bind(this)}\r\n            onClose={this.onClose.bind(this)}\r\n            ref={Websocket => {\r\n              this.refWebSocket = Websocket;\r\n            }}\r\n            />\r\n            :\r\n            <div></div>\r\n      }\r\n      <form>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">WebSocket Address</label>\r\n          <div className=\"col-sm-6\">\r\n          <input type=\"text\" className=\"form-control\" onChange={this.web_socket_url_change.bind(this)} placeholder=\"ws://0.0.0.0:8181\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-1\">\r\n                <button type=\"button\" className={ 'btn ' + (this.state.websocket_validation ? 'btn-success' : 'btn-danger') } disabled>{(this.state.websocket_validation ? 'Connected' : 'Disconnected')}</button>\r\n              </div>\r\n            </div>\r\n        <div className=\"form-group row\"></div>\r\n        <div className=\"form-group row\"></div>\r\n        <div className=\"form-group row\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\"></label>\r\n              <div className=\"col-sm-1\">\r\n                <button type=\"button\" className=\"btn btn-dark\" onClick={this.connect.bind(this)}>Connect</button>\r\n              </div>\r\n        </div>\r\n      </form>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Request</span>\r\n              </div>\r\n              <textarea className=\"form-control\" aria-label=\"Request\" rows=\"8\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <button className=\"btn btn-dark\" onClick={this.sendMessage.bind(this)} style={{marginTop: \"30%\"}}>Send</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr width=\"50%\"/>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Response</span>\r\n              </div>\r\n              <textarea className=\"form-control\" aria-label=\"Response\" rows=\"8\" value={this.state.response_area} disabled></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport default _ws;","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nrequire('signalr');\r\n\r\n\r\nclass _signalr extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        uri: '',\r\n        hub_name: '',\r\n        events: [],\r\n        invoke: '',\r\n        incoming_event: 'Response',\r\n        response_area: '',\r\n        connected: false\r\n    };\r\n    this.set_connectin_state = this.set_connectin_state.bind(this);\r\n  }\r\n\r\n  uri_change(event){\r\n    this.setState({uri: event.target.value});\r\n  }\r\n  hub_name_change(event){\r\n    this.setState({hub_name: event.target.value});\r\n  }\r\n  invoke_change(event){\r\n    this.setState({invoke: event.target.value});\r\n  }\r\n  handleChange(events) {\r\n  }\r\n  add_event(events){\r\n    this.setState({events})\r\n  }\r\n  set_response_area(value){\r\n    this.setState({response_area: value})\r\n  }\r\n  set_connectin_state(value){\r\n    this.setState({connected: value});\r\n  }\r\n  set_incoming_event(value){\r\n    this.setState({incoming_event: value})\r\n  }\r\n  \r\n  invoke_event(){\r\n    if(this.state.invoke.includes(',')){\r\n      const splitted = this.state.invoke.split(',');\r\n      const event_name = splitted[0];\r\n      splitted.shift();\r\n      console.log(splitted);\r\n      window.$.connection[this.state.hub_name].invoke(event_name, ...splitted);\r\n    }else{\r\n      window.$.connection[this.state.hub_name].invoke(this.state.invoke);\r\n    }\r\n  }\r\n  connect(){\r\n    const script = document.createElement(\"script\");\r\n    script.src = this.state.uri + \"/signalr/hubs\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.$.connection.hub.url= this.state.uri + '/signalr';\r\n\r\n      window.$.connection[this.state.hub_name].client.connected = () => { };\r\n\r\n      for(var i=0; i < this.state.events.length; i++){\r\n        const incoming_event_name = this.state.events[i];\r\n        window.$.connection[this.state.hub_name].client[this.state.events[i]] = (...args) => {\r\n          this.set_incoming_event(incoming_event_name);\r\n          this.set_response_area(args);\r\n        }\r\n      }\r\n      window.$.connection.hub.reconnecting(() => {\r\n        toast.warning(\"Disconnected. Trying to reconnect\");\r\n        this.set_connectin_state(false);\r\n      });\r\n      window.$.connection.hub.reconnected(() => {\r\n        toast.success(\"Back to online\");\r\n        this.set_connectin_state(true);\r\n      });\r\n      window.$.connection.hub.disconnected(() => {\r\n        toast.error(\"Disconnected\");\r\n        this.set_connectin_state(false);\r\n      });\r\n      window.$.connection.hub.start().done(() => {\r\n        this.set_connectin_state(true); \r\n        toast.success(\"Connected successfully\");\r\n        toast('Connection ID= '+window.$.connection.hub.id);\r\n      }).fail(() => { toast.warning(\"Server not available!\"); });\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <form>\r\n            <div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">SignalR Address</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.uri_change.bind(this)} placeholder=\"http://localhost:65297\" />\r\n                    </div>\r\n                    <label htmlFor=\"inputPassword\" className=\"col-sm-1 col-form-label\">HubName</label>\r\n                    <div className=\"col-sm-2\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.hub_name_change.bind(this)} placeholder=\"ChatHub\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Add Event</label>\r\n                    <div className=\"col-sm-5\">\r\n                    <TagsInput value={this.state.events} onChange={this.add_event.bind(this)} inputProps={{placeholder: 'Add Event'}} />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-1\">\r\n                <button type=\"button\" className={ 'btn ' + (this.state.connected ? 'btn-success' : 'btn-danger') } disabled>{(this.state.connected ? 'Connected' : 'Disconnected')}</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\"></div>\r\n            <div className=\"form-group row\"></div>\r\n            <div className=\"form-group row\">\r\n                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\"></label>\r\n                <div className=\"col-sm-1\">\r\n                    <button type=\"button\" className=\"btn btn-dark\" onClick={this.connect.bind(this)}>Connect</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Invoke Event</span>\r\n              </div>\r\n              <input type=\"text\" className=\"form-control\" onChange={this.invoke_change.bind(this)} placeholder=\"event_name,param1,param2,...\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <button className=\"btn btn-dark\" onClick={this.invoke_event.bind(this)}>Invoke</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr width=\"50%\"/>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"response_span_text\">{this.state.incoming_event}</span>\r\n              </div>\r\n              <textarea className=\"form-control\" aria-label=\"Response\" rows=\"8\" value={this.state.response_area} disabled></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport default _signalr;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\n\r\nclass _socketio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        uri: '',\r\n        hub_name: '',\r\n        events: [],\r\n        invoke: '',\r\n        incoming_event: 'Response',\r\n        response_area: '',\r\n        connected: false\r\n    };\r\n    this.set_connectin_state = this.set_connectin_state.bind(this);\r\n  }\r\n\r\n  uri_change(event){\r\n    this.setState({uri: event.target.value});\r\n  }\r\n  hub_name_change(event){\r\n    this.setState({hub_name: event.target.value});\r\n  }\r\n  invoke_change(event){\r\n    this.setState({invoke: event.target.value});\r\n  }\r\n  add_event(events){\r\n    this.setState({events})\r\n  }\r\n  set_response_area(value){\r\n    this.setState({response_area: value})\r\n  }\r\n  set_connectin_state(value){\r\n    this.setState({connected: value});\r\n  }\r\n  set_incoming_event(value){\r\n    this.setState({incoming_event: value})\r\n  }\r\n  \r\n  invoke_event(){\r\n    if(this.state.invoke.includes(',')){\r\n      const splitted = this.state.invoke.split(',');\r\n      const event_name = splitted[0];\r\n      splitted.shift();\r\n      console.log(splitted);\r\n      window.$.connection[this.state.hub_name].invoke(event_name, ...splitted);\r\n    }else{\r\n      window.$.connection[this.state.hub_name].invoke(this.state.invoke);\r\n    }\r\n  }\r\n  connect(){\r\n    const script = document.createElement(\"script\");\r\n    script.src = this.state.uri + \"/socket.io/socket.io.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      const script2 = document.createElement(\"script\");\r\n      script2.type = 'text/javascript';\r\n      script2.innerHTML = `var socket = io('${this.state.uri}');`\r\n      script.async = true;\r\n      document.body.appendChild(script2);\r\n\r\n      window.socket.on('connect', () => {\r\n        this.set_connectin_state(true);\r\n        toast.success(\"Connected successfully\");\r\n      });\r\n\r\n      this.state.events.map((item) => {\r\n        window.socket.on(item, (...args) => {\r\n          const incoming_event_name = item;\r\n          this.set_incoming_event(incoming_event_name);\r\n          this.set_response_area(JSON.stringify(args));\r\n        });\r\n      })\r\n\r\n      window.socket.on('event', (data) => {\r\n        console.log(data)\r\n      });\r\n      window.socket.on('disconnect', () => {\r\n        toast.error(\"Disconnected\");\r\n        this.set_connectin_state(false);\r\n      });\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <form>\r\n            <div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">SignalR Address</label>\r\n                    <div className=\"col-sm-5\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.uri_change.bind(this)} placeholder=\"http://localhost:3000\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Add Event</label>\r\n                    <div className=\"col-sm-5\">\r\n                    <TagsInput value={this.state.events} onChange={this.add_event.bind(this)} inputProps={{placeholder: 'Add Event'}} />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-1\">\r\n                <button type=\"button\" className={ 'btn ' + (this.state.connected ? 'btn-success' : 'btn-danger') } disabled>{(this.state.connected ? 'Connected' : 'Disconnected')}</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\"></div>\r\n            <div className=\"form-group row\"></div>\r\n            <div className=\"form-group row\">\r\n                <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\"></label>\r\n                <div className=\"col-sm-1\">\r\n                    <button type=\"button\" className=\"btn btn-dark\" onClick={this.connect.bind(this)}>Connect</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Invoke Event</span>\r\n              </div>\r\n              <input type=\"text\" className=\"form-control\" onChange={this.invoke_change.bind(this)} placeholder=\"event_name,param1,param2,...\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <button className=\"btn btn-dark\" onClick={this.invoke_event.bind(this)}>Invoke</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr width=\"50%\"/>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10\" style={{padding: 30}}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"response_span_text\">{this.state.incoming_event}</span>\r\n              </div>\r\n              <textarea className=\"form-control\" aria-label=\"Response\" rows=\"8\" value={this.state.response_area} disabled></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport default _socketio;\r\n","import React, { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport _ws from './components/ws';\r\nimport _signalr from './components/signalr';\r\nimport _socketio from './components/socketio';\r\n\r\n\r\nfunction App() {\r\n\r\n  function onSelectChange(event){\r\n    setSocketType(event.target.value);\r\n  }\r\n\r\n  function renderComponent(){\r\n    if(socketType === \"ws\" || socketType === \"wss\"){\r\n      return(<_ws />)\r\n    }else if(socketType === \"signalr\"){\r\n      return(<_signalr />)\r\n    }else if(socketType === \"socketio\"){\r\n      return(<_socketio />)\r\n    }\r\n  }\r\n  \r\n  const [socketType, setSocketType] = useState('ws');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <div className=\"ribbon\">\r\n        <div className=\"label\"><a className=\"github\" href=\"https://github.com/konuralpt/websocket-tester\" target=\"_blank\">GitHub</a></div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Socket Type</label>\r\n              <div className=\"col-sm-1\">\r\n              <select className=\"selectpicker\" onChange={onSelectChange}>\r\n                <optgroup label=\"WebSocket\" data-max-options=\"2\">\r\n                  <option value=\"ws\">ws://</option>\r\n                  <option value=\"wss\">wss://</option>\r\n                </optgroup>\r\n                <optgroup label=\"Event-Driven WebSocket\" data-max-options=\"2\">\r\n                  <option value=\"signalr\">SignalR</option>\r\n                  <option value=\"socketio\">SocketIO</option>\r\n                </optgroup>\r\n              </select>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {\r\n        renderComponent()\r\n      }\r\n      <ToastContainer />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport 'bootstrap-select/dist/css/bootstrap-select.min.css';\r\nimport 'bootstrap-select/dist/js/bootstrap-select.min.js';\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}